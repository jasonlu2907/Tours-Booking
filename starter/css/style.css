/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    color: #777;
    line-height: 1.7;
    padding: 30px;
}

header {
    /* viewport height */
    height: 95vh; 
    background-image: linear-gradient(
    to right bottom,
    rgba(85, 197, 122, 0.808), /*Chi so cuoi cung la de lam` mo` ti xiu de thay bgimg */
    rgba(40, 180, 133, 0.801))
    ,url(../img/hero-small.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    /* Modern CSS property clip-path */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo_box {
    position: absolute;
    /* top left start from? the relative which is the fatherElement*/
    top: 30px;
    left: 30px;
}

.logo {
    height: 50px; /*width automatically defined by the browser and nguoc lai*/
}

.text_box {
    position: absolute;
    top: 40%; /*50% tu thang cha, tuc la header*/
    left: 50%;
    transform: translate(-50%, -50%); /*relate to the element itself*/
    text-align: center;
}

.heading-primary {
    /* background-color: red; */
    text-transform: uppercase;
    color: #fff;
    margin-bottom: 50px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 25px;
    font-weight: 700;
    letter-spacing: 15px;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/*STYLING BUTTONS  */
/* muốn link và visited stay the same nên viết code chung */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    /* Clear underline */
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 50px;

    position: relative;

    /* 2types of animations, but here we use ez one */
    transition: all;
    transition-duration: 0.2s;
    /* transition-delay: 0.2s; */

    /*Ban đầu tưởng muốn cho vô giữa dùng transform hoặc absolute property cho ngầu
    nhưng đơn giản vì đây là inline-block nên mình treat it as a text ->center align 
    chổ mà nó nằm trong khoảng: text-box */
    
}
.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}
/* When we click the btn */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* ------------------ */
.btn::after {
    /* To create it, first thing to do is to specify the content no matter if it ""
    otherwise its not going to appear */
    content: "";
    display: inline-block;

    /* 100% of the height&width of the real btn */
    height: 100%;
    width: 100%;
    border-radius: 50px;

    /* Ko có những cái này nó sẽ tự gộp lại thành 1 element nên btn sẽ trông bự
    + absolute sẽ tìm tới thằng "relative" gần nhất -> real btn 
    + z-index để makesure nó nằm bên dưới real btn*/
    position: absolute;
    top: 0;
    left : 0;
    z-index: -1;

    transition: all 0.2s;
}

.btn-white::after {
    background-color: #fff;
    
}

.btn:hover::after {
    /* scale increase the element */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn-animated {
    animation: moveInBottom .5s ease-out 0.75s;
    
    /* Ghi đến đây thôi, btn ko có animation trong 1 lúc,
    để prevent chn này dùng animation-fill-mode backward đơn giản là
    nó sẽ áp dụng animation trước lúc 0% luôn */
    animation-fill-mode: backwards;
}