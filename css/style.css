@charset "UTF-8";
/*COLORS:*/
/*GRID:*/
/*FONT*/
/*BASIC DEFINITIONS ABOUT ENTIRE THE PROJECT*/
*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit; }

html {
  /*Root font-size, read note on Udemy*/
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/*Things that related to text*/
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  color: #777;
  line-height: 1.7;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  /* background-color: red; */
  text-transform: uppercase;
  color: #fff;
  margin-bottom: 5rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: 1.5rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  letter-spacing: 0.3rem;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(5deg);
    text-shadow: 0.3rem 1rem 2rem rgba(0, 0, 0, 0.342); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 20rem 0;
  margin-top: -20vh; }

.section-feature {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(/img/nat-4.jpg);
  background-size: cover;
  margin-top: -10rem;
  clip-path: polygon(0 15%, 100% 0, 100% 85%, 0 100%); }

.section-tours {
  padding: 20rem 0 10rem 0;
  background-color: #f7f7f7;
  margin-top: -10rem; }

.section-stories {
  padding: 10rem 0;
  position: relative; }

.btn {
  /*STYLING BUTTONS  */
  /* muốn link và visited stay the same nên viết code chung */
  /* When we click the btn */
  /* ------------------ */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    /* Clear underline */
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 5rem;
    font-size: 1.6rem;
    position: relative;
    /* 2types of animations, but here we use ez one */
    transition: all;
    transition-duration: 0.2s;
    /* transition-delay: 0.2s; */
    /*Ban đầu tưởng muốn cho vô giữa dùng transform hoặc absolute property cho ngầu
        nhưng đơn giản vì đây là inline-block nên mình treat it as a text ->center align 
        chổ mà nó nằm trong khoảng: text-box */ }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
  .btn--green {
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    color: white; }
  .btn::after {
    /* To create it, first thing to do is to specify the content no matter if it ""
        otherwise its not going to appear */
    content: "";
    display: inline-block;
    /* 100% of the height&width of the real btn */
    height: 100%;
    width: 100%;
    border-radius: 5rem;
    /* Ko có những cái này nó sẽ tự gộp lại thành 1 element nên btn sẽ trông bự
        + absolute sẽ tìm tới thằng "relative" gần nhất -> real btn 
        + z-index để makesure nó nằm bên dưới real btn*/
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.2s; }
  .btn--white::after {
    background-color: #fff; }
  .btn:hover::after {
    /* scale increase the element */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }
  .btn--animated {
    animation: moveInBottom .5s ease-out 0.75s;
    /* Ghi đến đây thôi, btn ko có animation trong 1 lúc,
        để prevent chn này dùng animation-fill-mode backward đơn giản là
        nó sẽ áp dụng animation trước lúc 0% luôn */
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  font-size: 1.6rem;
  display: inline-block;
  text-decoration: none;
  border-bottom: 0.1rem solid #55c57a;
  padding: 0.3rem;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: white;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.26);
  transform: translateY(-0.2rem); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.26);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 1rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      transform: scale(1.1) translateY(-0.5rem);
      box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.4);
      outline: 1.5rem solid #55c57a;
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.feature-box {
  font-size: 1.5rem;
  font-weight: 400;
  padding: 2.5rem;
  text-align: center;
  border-radius: 0.3rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  background-color: rgba(255, 255, 255, 0.8);
  transition: all 0.2s; }
  .feature-box__icon {
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent;
    font-size: 6rem; }
  .feature-box:hover {
    transform: translateY(0.6rem); }

.card {
  perspective: 150rem;
  position: relative;
  height: 50rem; }
  .card__side {
    height: 50rem;
    transition: all 0.8s ease;
    border-radius: 0.3rem;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    backface-visibility: hidden; }
    .card__side--front {
      background-color: white; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0deg); }
  .card__picture {
    height: 23rem;
    background-size: cover;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    background-blend-mode: screen; }
    .card__picture-1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../../img/nat-5.jpg); }
    .card__picture-2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../../img/nat-6.jpg); }
    .card__picture-3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone; }
    .card__heading-span-1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.8), rgba(255, 119, 48, 0.8)); }
    .card__heading-span-2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)); }
    .card__heading-span-3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.8), rgba(86, 67, 250, 0.8)); }
  .card__details {
    padding: 2rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        font-size: 1.6rem;
        text-align: center;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 90%;
    transform: translate(-50%, -50%);
    text-align: center; }
  .card__price-box {
    color: white;
    margin-bottom: 5rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

.story {
  width: 75%;
  margin: 0 auto;
  background-color: rgba(255, 255, 255, 0.7);
  padding: 6rem;
  font-size: 1.6rem;
  border-radius: 3px;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  transform: skewX(-12deg); }
  .story__shape {
    position: relative;
    height: 15rem;
    width: 15rem;
    float: left;
    shape-outside: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    overflow: hidden; }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    text-align: center;
    text-transform: uppercase;
    opacity: 0;
    transition: all 0.5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story__image {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all 0.5s;
    backface-visibility: hidden; }
  .story:hover .story__image {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(90%); }
  .story__text {
    transform: skewX(12deg); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.4;
  overflow: hidden; }
  .bg-video__content {
    width: 100%;
    height: 100%;
    object-fit: cover; }

.header {
  /* viewport height */
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.808), rgba(40, 180, 133, 0.801)), url(../img/ha-long-bay.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* Modern CSS property clip-path */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo_box {
    position: absolute;
    /* top left start from? the relative which is the fatherElement*/
    top: 3rem;
    left: 3rem; }
  .header__logo {
    height: 5rem;
    /*width automatically defined by the browser and nguoc lai*/ }
  .header__text_box {
    position: absolute;
    top: 40%;
    /*50% tu thang cha, tuc la header*/
    left: 50%;
    transform: translate(-50%, -50%);
    /*relate to the element itself*/
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2*((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc((3*(100% - 3 * 6rem) / 4) + 2 * 6rem); }
