@charset "UTF-8";
/*COLORS:*/
/*GRID:*/
/*BASIC DEFINITIONS ABOUT ENTIRE THE PROJECT*/
*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit; }

html {
  /*Root font-size, read note on Udemy*/
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/*Things that related to text*/
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  color: #777;
  line-height: 1.7;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  /* background-color: red; */
  text-transform: uppercase;
  color: #fff;
  margin-bottom: 5rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: 1.5rem;
    animation: moveInRight 1s ease-out; }

.btn {
  /*STYLING BUTTONS  */
  /* muốn link và visited stay the same nên viết code chung */
  /* When we click the btn */
  /* ------------------ */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    /* Clear underline */
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 5rem;
    position: relative;
    /* 2types of animations, but here we use ez one */
    transition: all;
    transition-duration: 0.2s;
    /* transition-delay: 0.2s; */
    /*Ban đầu tưởng muốn cho vô giữa dùng transform hoặc absolute property cho ngầu
        nhưng đơn giản vì đây là inline-block nên mình treat it as a text ->center align 
        chổ mà nó nằm trong khoảng: text-box */ }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
  .btn::after {
    /* To create it, first thing to do is to specify the content no matter if it ""
        otherwise its not going to appear */
    content: "";
    display: inline-block;
    /* 100% of the height&width of the real btn */
    height: 100%;
    width: 100%;
    border-radius: 5rem;
    /* Ko có những cái này nó sẽ tự gộp lại thành 1 element nên btn sẽ trông bự
        + absolute sẽ tìm tới thằng "relative" gần nhất -> real btn 
        + z-index để makesure nó nằm bên dưới real btn*/
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.2s; }
  .btn--white::after {
    background-color: #fff; }
  .btn:hover::after {
    /* scale increase the element */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }
  .btn--animated {
    animation: moveInBottom .5s ease-out 0.75s;
    /* Ghi đến đây thôi, btn ko có animation trong 1 lúc,
        để prevent chn này dùng animation-fill-mode backward đơn giản là
        nó sẽ áp dụng animation trước lúc 0% luôn */
    animation-fill-mode: backwards; }

.header {
  /* viewport height */
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.808), rgba(40, 180, 133, 0.801)), url(../img/ha-long-bay.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* Modern CSS property clip-path */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo_box {
    position: absolute;
    /* top left start from? the relative which is the fatherElement*/
    top: 3rem;
    left: 3rem; }
  .header__logo {
    height: 5rem;
    /*width automatically defined by the browser and nguoc lai*/ }
  .header__text_box {
    position: absolute;
    top: 40%;
    /*50% tu thang cha, tuc la header*/
    left: 50%;
    transform: translate(-50%, -50%);
    /*relate to the element itself*/
    text-align: center; }

.row {
  max-width: 114rem;
  background-color: lightcoral;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: peru;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2*((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc((3*(100% - 3 * 6rem) / 4) + 2 * 6rem); }
